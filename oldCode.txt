yBlock = (self.y+self.size[1]+self.vel[1])//heightOfTile
        xBlock = (self.posInLevel)//widthOfTile
        #CHECK IF HIT WALL
        if 0 <= xBlock < lenOfLevel:
            if (level.levels[level.currentLevel][yBlock-1][xBlock] != []):
                self.x+=5
            elif (level.levels[level.currentLevel][yBlock-2][xBlock] != []):
                self.x+=5
            if (level.levels[level.currentLevel][yBlock-1][xBlock+1] != []):
                self.x-=5
            elif (level.levels[level.currentLevel][yBlock-2][xBlock+1] != []):
                self.x-=5
        #CHECK IF GROUNDED OR IF HIT CIELLING
        yBlock = (self.y+self.size[1]+self.vel[1])//heightOfTile
        xBlock = (self.posInLevel)//widthOfTile
        if 0 <= yBlock < row:
            if self.vel[1] >=0:
                if (level.levels[level.currentLevel][yBlock][xBlock] != []):
                    self.groundY = yBlock*heightOfTile
                    self.y = self.groundY-self.size[1]
                    self.vel[1] = 0
                if (level.levels[level.currentLevel][yBlock][xBlock+1] != []):
                    self.groundY = (self.y+self.size[1]+self.vel[1])//heightOfTile*heightOfTile
                    self.y = self.groundY-self.size[1]
                    self.vel[1] = 0
            yBlock = (self.y+self.size[1]+self.vel[1])//heightOfTile
            xBlock = (self.posInLevel)//widthOfTile
            if (level.levels[level.currentLevel][yBlock-2][xBlock] != []):
                self.vel[1] = 0
            if (level.levels[level.currentLevel][yBlock-2][xBlock+1] != []):
                self.vel[1] = 0

def fixTextures(level_1):
    for i in range(1, row):
        for j in range(0, col*numOfRects-1):
            if level_1[i][j] == ["dirt"]:
                for k in range(j, col*spot+col-1):
                    if level_1[i][k-1] == []:
                        level_1[i][k] = ["t_l_side_dirt"]
                    if level_1[i][k+1] == []:
                        level_1[i][k] = ["t_r_side_dirt"]
                        break
                if level_1[i][j-1] == [] and level_1[i][j+1] == []:
                    level_1[i][j] = ["dirt"]
                if level_1[i-1][j] == ["t_l_side_dirt"]:
                    if level_1[i+1][j] == [] and level_1[i+1][j]:
                        level_1[i][j] = ["b_l_side_dirt"]
                    else:
                        level_1[i][j] = ["m_l_side_dirt"]
                elif level_1[i-1][j] == ["t_r_side_dirt"]:
                    if level_1[i+1][j] == []:
                        level_1[i][j] = ["b_r_side_dirt"]
                    else:
                        level_1[i][j] = ["m_r_side_dirt"]
    return level_1

 #Rect(self.posInLevel+self.size[0]+5, self.y, 1, self.size[1]).collidelist(level.rects[level.currentLevel]) == -1
 Rect(self.posInLevel-5, self.y, 2, self.size[1]).collidelist(level.rects[level.currentLevel]) == -1

 if self.isFollowingPlayer:
            if (abs(((self.hitbox[1]-player.y)**2+(self.hitbox[0]+self.hitbox[2]//2-player.posInLevel)**2)**0.5) > 200):
                if self.hitbox[1] > player.y:
                    self.hitbox = self.hitbox.move(0, -self.moveAmount)
                if self.hitbox[1] < player.y:
                    self.hitbox = self.hitbox.move(0, self.moveAmount)
                if self.hitbox[0] > player.posInLevel:
                    self.hitbox = self.hitbox.move(-self.moveAmount, 0)
                if self.hitbox[0] < player.posInLevel:
                    self.hitbox = self.hitbox.move(self.moveAmount, 0)